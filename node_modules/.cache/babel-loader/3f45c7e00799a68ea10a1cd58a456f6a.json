{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar Toggle = function (_React$Component) {\n  _inherits(Toggle, _React$Component);\n\n  function Toggle(props) {\n    _classCallCheck(this, Toggle);\n\n    var _this = _possibleConstructorReturn(this, (Toggle.__proto__ || Object.getPrototypeOf(Toggle)).call(this, props));\n\n    _this.state = {\n      checked: props.defaultChecked ? props.defaultChecked : props.checked\n    };\n    _this.displayName = \"Toggle\";\n    _this.onToggle = _this.onToggle.bind(_this);\n    return _this;\n  }\n\n  _createClass(Toggle, [{\n    key: \"render\",\n    value: function render() {\n      var _props = this.props,\n          id = _props.id,\n          _props$name = _props.name,\n          name = _props$name === undefined ? \"toggle\" : _props$name,\n          label = _props.label,\n          labelRight = _props.labelRight,\n          className = _props.className,\n          _props$checked = _props.checked,\n          checked = _props$checked === undefined ? false : _props$checked,\n          defaultChecked = _props.defaultChecked,\n          _props$mode = _props.mode,\n          mode = _props$mode === undefined ? \"toggle\" : _props$mode,\n          _props$theme = _props.theme,\n          theme = _props$theme === undefined ? \"round\" : _props$theme,\n          disabled = _props.disabled,\n          others = _objectWithoutProperties(_props, [\"id\", \"name\", \"label\", \"labelRight\", \"className\", \"checked\", \"defaultChecked\", \"mode\", \"theme\", \"disabled\"]); // backward compatibility\n\n\n      var bcTheme = {\n        round: \"rsbc-switch-button-flat-round\",\n        square: \"rsbc-switch-button-flat-square\",\n        \"rsbc-switch-button-flat-round\": \"rsbc-switch-button-flat-round\",\n        \"rsbc-switch-button-flat-square\": \"rsbc-switch-button-flat-square\"\n      }; // backward compatibility\n\n      var bcMode = {\n        toggle: \"switch\",\n        \"switch\": \"switch\",\n        select: \"select\"\n      };\n      var classes = [className, \"rsbc-switch-button\", \"rsbc-mode-\" + bcMode[mode], bcTheme[theme], disabled ? \" disabled\" : \"\"];\n      return _react2.default.createElement(\"div\", _extends({}, others, {\n        className: classes.join(\" \").trim()\n      }), label ? _react2.default.createElement(\"label\", {\n        htmlFor: id ? id : name\n      }, label) : null, _react2.default.createElement(\"input\", {\n        onChange: this.onToggle,\n        checked: this.state.checked,\n        disabled: disabled,\n        id: id ? id : name,\n        name: name,\n        type: \"checkbox\",\n        value: \"1\"\n      }), _react2.default.createElement(\"label\", {\n        htmlFor: id ? id : name\n      }), labelRight ? _react2.default.createElement(\"label\", {\n        htmlFor: id ? id : name\n      }, labelRight) : null);\n    }\n  }, {\n    key: \"componentWillReceiveProps\",\n    value: function componentWillReceiveProps(nextProps) {\n      this.setState({\n        checked: nextProps.checked !== this.state.checked ? nextProps.checked : this.state.checked\n      });\n    }\n  }, {\n    key: \"onToggle\",\n    value: function onToggle(evt) {\n      this.props.onChange(!this.state.checked); // backward compatibility\n\n      this.props.onToggle(!this.state.checked, evt);\n      this.setState({\n        checked: !this.state.checked\n      });\n    }\n  }]);\n\n  return Toggle;\n}(_react2.default.Component);\n\nToggle.defaultProps = {\n  onChange: function onChange() {},\n  // backward compatibility\n  onToggle: function onToggle() {}\n};\nexports.default = Toggle;","map":null,"metadata":{},"sourceType":"script"}